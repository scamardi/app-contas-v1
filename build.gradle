import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.6.13'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.openapi.generator' version '6.0.0'
}

group = 'br.com.banco'
version = '1.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.projectlombok:lombok:1.18.26'
    implementation 'javax.validation:validation-api'
    implementation 'org.postgresql:postgresql'
    implementation 'com.zaxxer:HikariCP:5.0.1'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.0'
    implementation 'io.swagger.core.v3:swagger-core:2.2.23'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.23'
    implementation 'io.swagger.core.v3:swagger-core-jakarta:2.2.23'
    implementation 'org.mapstruct:mapstruct:1.6.0'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'junit:junit:4.13.2'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.0')
}

test {
    finalizedBy(jacocoTestReport)
}

jacocoTestReport {
    dependsOn(tasks.test)
    reports {
        xml.required.set(true)
        csv.required.set(true)
        html.outputLocation.set(file("${buildDir}/reports/jacoco/jacocoHtml"))
        xml.outputLocation.set(file("${buildDir}/reports/jacoco/jacoco.xml"))
    }
}

tasks.withType(GenerateTask).configureEach {
    outputs.upToDateWhen { false }
    outputs.cacheIf { false }
}

openApiGenerate {
    generatorName = 'spring'
    inputSpec = "$rootDir/src/main/resources/openapi/conta.yml"
    outputDir = "$buildDir/generated/sources/openapi"
    modelPackage = 'br.com.banco.entrypoint.model'
    globalProperties = [
            interface       : 'false',
            apis            : 'false',
            invokers        : 'false',
            models          : ''
    ]
    configOptions = [
            dateLibrary: 'java8'
    ]
}

tasks.compileJava.dependsOn(tasks.openApiGenerate)

sourceSets.main.java.srcDirs += "$buildDir/generated/sources/openapi/src/main/java"